const axios = require('axios');
const { wrapper } = require('axios-cookiejar-support');
const tough = require('tough-cookie');
const prompt = require('prompt-sync')();

const alunoJar = new tough.CookieJar();
const alunoClient = wrapper(axios.create({ jar: alunoJar, withCredentials: true }));

async function loginAluno() {
  await alunoClient.get('http://192.168.0.125/index.php?pag=login');
  await alunoClient.post(
    'http://192.168.0.125/logar.php?acao=logar',
    { aluno: '0056290', senha: '2008' },
    {
      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
      transformRequest: [(data) =>
        Object.entries(data).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&')
      ]
    }
  );
}

async function concluiVideoaula(curso, aula) {
  await alunoClient.get(`http://192.168.0.125/index.php?pag=aluno&secao=aula&curso=${curso}&aula=${aula}`);

  const resp = await alunoClient.post(
    `http://192.168.0.125/index.php?pag=aluno&secao=aula&curso=${curso}&aula=${aula}`,
    { usuario: 'tiago', senha: '198569879' },
    {
      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
      transformRequest: [(data) =>
        Object.entries(data).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&')
      ]
    }
  );

  const tokenMatch = resp.data.match(/token=([A-Za-z0-9|=]+)/);
  const token = tokenMatch ? tokenMatch[1] : '';
  console.log(`[Aula ${aula}] Token extraído: ${token}`);

  await alunoClient.post(
    `http://192.168.0.125/index.php?pag=aluno&secao=aula&curso=${curso}&aula=${aula}&concluida=sim&liberado=sim&token=${token}`,
    {},
    { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }
  );

  if (token) {
    await alunoClient.get(`http://192.168.0.125/index.php?pag=aluno&token=${token}`);
    console.log(`[Aula ${aula}] ✅ Videoaula concluída com sucesso!`);
  } else {
    console.log(`[Aula ${aula}] ❌ Token não encontrado. A videoaula pode não ter sido concluída.`);
  }
}

async function concluiApostila(curso, aula) {
  await alunoClient.get(`http://192.168.0.125/index.php?pag=aluno&secao=apostila&curso=${curso}&aula=${aula}&concluida=sim`);
  console.log(`[Aula ${aula}] ✅ Apostila concluída.`);
}

async function concluiExercicios(curso, aula) {
  await alunoClient.get(`http://192.168.0.125/index.php?pag=aluno&secao=exercicios&curso=${curso}&aula=${aula}`);
  await alunoClient.get(`http://192.168.0.125/index.php?pag=aluno&secao=curso&secao=exercicios&curso=${curso}&aula=${aula}&tipo=1&concluida=sim`);
  console.log(`[Aula ${aula}] ✅ Exercícios finalizados.`);
}

async function concluiFixacao(curso, aula) {
  await alunoClient.get(`http://192.168.0.125/index.php?pag=aluno&secao=fixacao&curso=${curso}&aula=${aula}`);
  await alunoClient.get(`http://192.168.0.125/index.php?pag=aluno&secao=fixacao&curso=${curso}&aula=${aula}&concluida=sim`);
  console.log(`[Aula ${aula}] ✅ Fixação concluída.`);
}

async function liberaProvaCompleta(curso, aula) {
  await alunoClient.post(
    'http://192.168.0.125/_pags/aluno/ajax_verifica_teste_liberado.php',
    { curso, aula },
    {
      headers: {
        'Content-Type': 'application/json',
        'Referer': `http://192.168.0.125/index.php?pag=aluno&secao=liberaaula&curso=${curso}&aula=${aula}`
      }
    }
  );

  await alunoClient.post(
    `http://192.168.0.125/index.php?pag=aluno&secao=liberaaula&curso=${curso}&aula=${aula}`,
    {
      liberaaula_login: 'tiago',
      liberaaula_senha: '198569879'
    },
    {
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Referer': `http://192.168.0.125/index.php?pag=aluno&secao=liberaaula&curso=${curso}&aula=${aula}`
      },
      transformRequest: [(data) =>
        Object.entries(data).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&')
      ]
    }
  );

  await alunoClient.post(
    `http://192.168.0.125/index.php?pag=aluno&secao=liberaaula&curso=${curso}&aula=${aula}&acao=salvar`,
    {
      observacao: '',
      apostila: 's',
      fixacao: 's'
    },
    {
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Referer': `http://192.168.0.125/index.php?pag=aluno&secao=liberaaula&curso=${curso}&aula=${aula}`
      },
      transformRequest: [(data) =>
        Object.entries(data).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&')
      ]
    }
  );

  await alunoClient.post(
    'http://192.168.0.125/_pags/aluno/ajax_verifica_teste_liberado.php',
    { curso, aula },
    {
      headers: {
        'Content-Type': 'application/json',
        'Referer': `http://192.168.0.125/index.php?pag=aluno&secao=liberaaula&curso=${curso}&aula=${aula}`
      }
    }
  );
  console.log(`[Aula ${aula}] ✅ Prova liberada.`);
}

async function enviaRespostasProva(curso, aula) {
  const respostas = {
    'id[0]': '50634', 'p[0]': '1',
    'id[1]': '50636', 'p[1]': '1',
    'id[2]': '50635', 'p[2]': '1',
    'id[3]': '50633', 'p[3]': '1',
    'id[4]': '50637', 'p[4]': '1',
    'perguntas': '5',
    'enviado': 'sim'
  };

  const resp = await alunoClient.post(
    `http://192.168.0.125/index.php?pag=aluno&secao=teste&curso=${curso}&aula=${aula}&acao=avalia`,
    respostas,
    {
      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
      transformRequest: [(data) =>
        Object.entries(data).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&')
      ]
    }
  );

  console.log(`[Aula ${aula}] ✅ Respostas da prova enviadas.`);
}

async function executaCurso() {
  const curso = prompt('Digite o código do curso: ');
  const aulaInicio = parseInt(prompt('Digite a aula inicial: '));
  const aulaFim = parseInt(prompt('Digite a aula final: '));

  await loginAluno();

  for (let aula = aulaInicio; aula <= aulaFim; aula++) {
    console.log(`\n=== 📚 PROCESSANDO AULA ${aula} DO CURSO ${curso} ===`);
    try {
      await concluiVideoaula(curso, aula);
      await concluiApostila(curso, aula);
      await concluiExercicios(curso, aula);
      await concluiFixacao(curso, aula);
      await liberaProvaCompleta(curso, aula);
      await enviaRespostasProva(curso, aula);
      console.log(`=== ✅ Aula ${aula} concluída com sucesso!\n`);
    } catch (error) {
      console.error(`❌ Erro ao processar aula ${aula}:`, error.message);
    }
  }

  console.log('🚀 Todas as aulas foram processadas com sucesso!');
}

executaCurso();
